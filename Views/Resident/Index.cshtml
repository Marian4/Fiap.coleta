@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    @model IEnumerable<ResidentModel>
}
<h3>Moradores</h3>
@if(!string.IsNullOrEmpty((String)TempData["message"]))
{
    <div class="alert alert-success" role="alert">
        @TempData["message"]
    </div>
}
@if(!string.IsNullOrEmpty((String)TempData["error"]))
{
    <div class="alert alert-danger" role="alert">
        @TempData["error"]
    </div>
}
<a asp-controller="Resident" asp-action="Create">+ Adicionar Morador</a>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nome</th>
            <th>Cidade</th>
            <th>Estado</th>
            <th>Rua</th>
            <th>Bairro</th>
            <th>Número</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var resident in Model)
        {
        <tr>
            <td>@resident.id</td>
            <td>@resident.name</td>
            <td>@resident.Address.city</td>
            <td>@resident.Address.state</td>
            <td>@resident.Address.street</td>
            <td>@resident.Address.neighborhood</td>
            <td>@resident.Address.number</td>
            <td>
                <a asp-controller="Resident" asp-action="Detail" asp-route-id="@resident.id">Visualizar</a>
                <a asp-controller="Resident" asp-action="Update" asp-route-id="@resident.id">Editar</a>
                <a asp-controller="Resident" asp-action="Remove" asp-route-id="@resident.id">Excluir</a>
            </td>
        </tr>
        }
    </tbody>
</table>
<div style="width: 100%; display: flex; align-items: center; justify-content: center; gap: 1rem;">
    @if (ViewBag.PageNumber > 1)
    {
        <a style="text-decoration: none; padding: 0.5rem 1rem; border: 1px solid #ccc; color: #111" href="@Url.Action("Index", new { page = ViewBag.PageNumber - 1, limit = ViewBag.PageSize })">anterior</a>
    }

    <!-- Exemplo de botões de páginação numerados -->
    @for (int i = 1; i <= Math.Ceiling((double)ViewBag.TotalItems / ViewBag.PageSize); i++)
    {
        <a style="text-decoration: none; padding: 0.5rem 1rem; border: 1px solid #ccc; color: #111" href="@Url.Action("Index", new { page = i, limit = ViewBag.PageSize })">@i</a>
    }

    @if (ViewBag.PageNumber < Math.Ceiling((double)ViewBag.TotalItems / ViewBag.PageSize))
    {
        <a style="text-decoration: none; padding: 0.5rem 1rem; border: 1px solid #ccc; color: #111" href="@Url.Action("Index", new { page = ViewBag.PageNumber + 1, limit = ViewBag.PageSize })">pŕoxima</a>
    }
</div>

